name: Deploy WebAPI to Container App by ACR

# This workflow deploys the WebAPI to the container app:
# - Manually via workflow_dispatch
# - Automatically on the 1st and 15th of each month (main branch only)

on:
  workflow_dispatch:
  schedule:
    # Run at 00:00 on the 1st and 15th day of each month
    - cron: '0 0 1,15 * *'
env:
  IMAGE_NAME: opiapi
  CONTAINER_APP_NAME: opiapi
  CONTAINER_APP_RESOURCE_GROUP: opi-dev-westus-002

permissions:
  id-token: write
  contents: read
jobs:
  docker_build_push_acr:
    name: 'Docker Build and Push to ACR'
    # Only run scheduled deployments on the main branch
    if: ${{ github.event_name == 'workflow_dispatch' || (github.event_name == 'schedule' && github.ref == 'refs/heads/main') }}
    runs-on: ubuntu-latest
    environment: production
  
    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash
  
    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v2
  
    - name: 'Docker Login'
      uses: docker/login-action@v2
      with:
        registry: ${{ secrets.ACR_ENDPOINT }}
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}
 
    - name: Build the WebAPI image and push it to ACR
      uses: docker/build-push-action@v4
      with:
        context: src/
        file: src/dockerfile.webapi
        push: true
        tags: ${{ secrets.ACR_ENDPOINT }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

    - name: 'Az CLI login'
      uses: Azure/login@v2.2.0
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: deploy Container App
      uses: azure/container-apps-deploy-action@v0
      with:
        acrName: ${{ secrets.ACR_NAME }}
        containerAppName: ${{ env.CONTAINER_APP_NAME }}
        resourceGroup: ${{ env.CONTAINER_APP_RESOURCE_GROUP }}
        imageToDeploy: ${{ secrets.ACR_ENDPOINT }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
