name: Deploy WebAPI to Container App by ACR

on:
  workflow_dispatch:

env:
  IMAGE_NAME: opiapi
  CONTAINER_APP_NAME: opiapi
  CONTAINER_APP_RESOURCE_GROUP: opi-dev-westus-002

permissions:
  id-token: write
  contents: read
jobs:
  docker_build_push_acr:
    name: 'Docker Build and Push to ACR'
    runs-on: ubuntu-latest
    environment: production
  
    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash
  
    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v2
  
    - name: 'Docker Login'
      uses: docker/login-action@v2
      with:
        registry: ${{ secrets.ACR_ENDPOINT }}
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}
 
    - name: Build the WebAPI image and push it to ACR
      uses: docker/build-push-action@v4
      with:
        context: src/
        file: src/dockerfile.webapi
        push: true
        tags: ${{ secrets.ACR_ENDPOINT }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

    - name: 'Az CLI login'
      uses: azure/login@a1b2c3d4e5f6a7b8c9d0e1f2a3b4c5d6e7f8a9b0
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: deploy Container App
      uses: azure/container-apps-deploy-action@v0
      with:
        acrName: ${{ secrets.ACR_NAME }}
        containerAppName: ${{ env.CONTAINER_APP_NAME }}
        resourceGroup: ${{ env.CONTAINER_APP_RESOURCE_GROUP }}
        imageToDeploy: ${{ secrets.ACR_ENDPOINT }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
