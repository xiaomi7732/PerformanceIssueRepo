@page "/"
@inject OpenPerformanceIssues.Client.OPIClient _opiClient
<h1>Open Performance Issue Registry (DRAFT)</h1>

@if (RegisteredItems.Any())
{
    @foreach (PerfIssueRegisterEntry entry in RegisteredItems)
    {
        <div class='card'>
            <div class="issue-item">
                <div class='issue-item-title'>
                    Issue #
                </div>
                <div>
                    @entry.IssueId
                </div>
            </div>

            <div class="issue-item">
                <div class='issue-item-title'>Is Active</div>
                <div>@entry.IsActive</div>
                <button id='activate-toggle-button'>Press to change</button>
            </div>

            <div class="issue-item">
                <div class='issue-item-title'>Title</div>
                <div>@entry.Title</div>
            </div>

            <div class="issue-item">
                <div class='issue-item-title'>Description</div>
                <div>@entry.Description</div>
            </div>

            <div class="issue-item">
                <div class='issue-item-title'>Recommendation</div>
                <div>@entry.Recommendation</div>
            </div>

            <div class="issue-item">
                <div class='issue-item-title'>Rationale</div>
                <div>@entry.Rationale</div>
            </div>

            <div class="issue-item">
                <div class='issue-item-title'>HelpLink</div>
                @if (entry.DocURL is not null)
                {
                    <div><a href="@entry.DocURL" target="_blank">@entry.DocURL</a></div>
                }
                else
                {
                    <div>Not available.</div>
                }
            </div>

            <div>TODO: Make supported types a component</div>
        </div>
    }

}
else
{
    <div>No registred entry.</div>
}

@code {
    public IEnumerable<PerfIssueRegisterEntry> RegisteredItems { get; set; } = Enumerable.Empty<PerfIssueRegisterEntry>();

    protected override async Task OnInitializedAsync()
    {
        RegisteredItems = await _opiClient.ListAllAsync(default);
    }
}